AWSTemplateFormatVersion: '2010-09-09'
Metadata: 
  License: Apache-2.0
Description: Building on AWS CDN Tier Stack
Parameters:
  SourceBucket:
    Type: String
  EC2VpcId:
    Type: AWS::EC2::VPC::Id
  PublicSubnet1:
    Type: AWS::EC2::Subnet::Id
  PublicSubnet2:
    Type: AWS::EC2::Subnet::Id
  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
Resources:

  WebpageCDN:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        DefaultCacheBehavior: 
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          MaxTTL: 0
          MinTTL: 0
          DefaultTTL: 0
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: all
            Headers: 
              - Accept
              - Referer
              - Athorization
              - Content-Type
          TargetOriginId: website #name of the origin
          ViewerProtocolPolicy: redirect-to-https
        Enabled: true
        Origins:
          - DomainName: !Sub "${Api}.execute-api.${AWS::Region}.amazonaws.com"
            Id: website
            OriginPath: '/Prod'
            CustomOriginConfig:
              OriginProtocolPolicy: https-only 
        PriceClass: PriceClass_All      
  
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Ref: PublicSubnet1
        - Ref: PublicSubnet2
      LoadBalancerAttributes:
        -   
          Key: idle_timeout.timeout_seconds
          Value: '50'
      SecurityGroups:
        - Ref: WebSecurityGroup

  CloudWatchRole: 
   Type: AWS::IAM::Role
   Properties: 
    AssumeRolePolicyDocument: 
     Version: "2012-10-17"
     Statement: 
      - Effect: Allow
        Principal: 
         Service: 
          - "apigateway.amazonaws.com"
        Action: "sts:AssumeRole"
    Path: "/"
    ManagedPolicyArns: 
     - "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
     - "arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
  
  Account: 
   Type: AWS::ApiGateway::Account
   Properties: 
    CloudWatchRoleArn: !GetAtt CloudWatchRole.Arn
      
  Api:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: WebProxyApi
      BinaryMediaTypes:
        - "*/*"

  Resource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt Api.RootResourceId
      RestApiId: !Ref Api
      PathPart: '{proxy+}'

  RootMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: ANY
      ResourceId: !GetAtt Api.RootResourceId
      RestApiId: !Ref Api
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: ANY
        Type: HTTP_PROXY
        Uri:
          !Join
          - ''
          - - 'http://'
            - !GetAtt LoadBalancer.DNSName
        PassthroughBehavior: WHEN_NO_MATCH
        IntegrationResponses:
          - StatusCode: 200

  ProxyMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: ANY
      ResourceId: !Ref Resource
      RestApiId: !Ref Api
      AuthorizationType: NONE
      RequestParameters:
        method.request.path.proxy: true
      Integration:
        CacheKeyParameters:
          - 'method.request.path.proxy'
        RequestParameters:
          integration.request.path.proxy: 'method.request.path.proxy'
        IntegrationHttpMethod: ANY
        Type: HTTP_PROXY
        Uri:
          !Join
          - ''
          - - 'http://'
            - !GetAtt LoadBalancer.DNSName
            - '/{proxy}'
        PassthroughBehavior: WHEN_NO_MATCH
        IntegrationResponses:
          - StatusCode: 200

  Deployment:
    DependsOn:
      - RootMethod
      - ProxyMethod
    Type: 'AWS::ApiGateway::Deployment'
    Properties:
      RestApiId: !Ref Api

  ProdStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      StageName: Prod
      Description: Prod Stage
      RestApiId: !Ref Api
      DeploymentId: !Ref Deployment
      TracingEnabled: true

Outputs:
  AlbDNSName:
    Value: !GetAtt LoadBalancer.DNSName
    Description: ALB DNSName
  DomainName:
    Value: !GetAtt WebpageCDN.DomainName
    Description: Webpage CloudFront Domain name.
  LoadBalancerArn:
    Value: !Ref LoadBalancer